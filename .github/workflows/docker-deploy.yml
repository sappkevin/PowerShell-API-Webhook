name: Docker Build and Deploy Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag for the Docker image (e.g., v1.0.0)'
        required: true
        default: 'latest'
  workflow_call:
    inputs:
      version_tag:
        description: 'Version tag for the Docker image'
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set version variables
        id: version
        run: |
          # If triggered by release, use the release tag
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version_tag }}"
          fi
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          if [[ -z "$VERSION" ]]; then
            VERSION="latest"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Linux image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.linux
          push: true
          tags: sappkevin/webhookshell:${{ env.VERSION }}-linux,sappkevin/webhookshell:latest-linux
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ env.VERSION }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set version variables
        id: version
        shell: bash
        run: |
          # If triggered by release, use the release tag
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version_tag }}"
          fi
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          if [[ -z "$VERSION" ]]; then
            VERSION="latest"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Version: ${VERSION}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Windows image
        uses: docker/build-push-action@v5
        env:
          DOCKER_BUILDKIT: 0  # Disable BuildKit for Windows compatibility
        with:
          context: .
          file: ./Dockerfile.windows
          push: true
          tags: sappkevin/webhookshell:${{ env.VERSION }}-windows,sappkevin/webhookshell:latest-windows
          platforms: windows/amd64
          build-args: |
            VERSION=${{ env.VERSION }}

  manifest-and-deploy:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Create and push Docker manifest
        run: |
          docker manifest create sappkevin/webhookshell:${{ env.VERSION }} \
            sappkevin/webhookshell:${{ env.VERSION }}-linux \
            sappkevin/webhookshell:${{ env.VERSION }}-windows
          docker manifest create sappkevin/webhookshell:latest \
            sappkevin/webhookshell:latest-linux \
            sappkevin/webhookshell:latest-windows
          docker manifest push sappkevin/webhookshell:${{ env.VERSION }}
          docker manifest push sappkevin/webhookshell:latest
      
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: sappkevin/webhookshell
          short-description: "PowerShell API Webhook - Execute PowerShell scripts via HTTP"
          readme-filepath: ./README.md