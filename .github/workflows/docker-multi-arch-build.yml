name: Docker Multi-Architecture Build

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      push_images:
        description: 'Whether to push the images to registry'
        required: false
        type: boolean
        default: false

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
        
      - name: Build Linux image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.linux
          load: true
          tags: webhookshell:test-linux
      
      - name: Test Linux image
        run: |
          docker images | grep webhookshell
          docker run -d --name test-webhookshell -p 8080:80 webhookshell:test-linux
          sleep 10
          HEALTH_RESPONSE=$(curl -s http://localhost:8080/health || echo "FAILED")
          echo "Health response: $HEALTH_RESPONSE"
          
          if [[ "$HEALTH_RESPONSE" == *"Healthy"* ]]; then
            echo "✅ Health endpoint test passed"
          else
            echo "❌ Health endpoint test failed"
            docker logs test-webhookshell
            exit 1
          fi
          
          docker rm -f test-webhookshell
  
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Prepare Dockerfile for Windows
        shell: powershell
        run: |
          @"
          FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS base
          WORKDIR /app
          EXPOSE 80
          EXPOSE 443

          SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

          FROM mcr.microsoft.com/dotnet/sdk:8.0-windowsservercore-ltsc2022 AS build
          WORKDIR /src

          COPY ["src/Webhookshell.csproj", "src/"]
          RUN dotnet restore "src/Webhookshell.csproj"

          COPY . .
          WORKDIR "/src"
          RUN dotnet publish "src/Webhookshell.csproj" -c Release -o /app/publish /p:UseAppHost=true

          FROM base AS final
          WORKDIR /app
          COPY --from=build /app/publish .
          ENV ASPNETCORE_URLS=http://+:80
          ENTRYPOINT ["dotnet", "Webhookshell.dll"]
          "@ | Set-Content -Path Dockerfile.windows
      
      - name: Build Windows image
        shell: powershell
        run: |
          docker build -t webhookshell:test-windows -f Dockerfile.windows .
      
      - name: Test Windows docker image
        shell: powershell
        run: |
        
            docker run -d --name test-webhookshell -p 8080:80 webhookshell:test-windows
            Start-Sleep -Seconds 60  # Longer startup time

            # Print container logs
            Write-Host "Container Logs:"
            docker logs test-webhookshell

            # Try to get detailed connection information
            Write-Host "Container Network Information:"
            docker inspect test-webhookshell

            # Attempt web request with more verbose output
            try {
                $response = Invoke-WebRequest -Uri "http://localhost:8080/health" -Verbose -ErrorAction Stop
                Write-Host "Full Response:"
                $response | Format-List *
            } catch {
                Write-Host "Connection Error Details:"
                $_ | Format-List *
            }            
            # Check for "Healthy" in any response
            if ($response.Content -match "Healthy") {
                Write-Host "✅ Health endpoint test passed"
            } else {
                Write-Host "❌ Health endpoint test failed: No 'Healthy' response"
                docker logs test-webhookshell
                exit 1
            }
            
            #Cleanup
            docker rm -f test-webhookshell
            