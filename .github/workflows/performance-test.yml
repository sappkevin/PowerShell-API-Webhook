name: Performance Testing

on:
  workflow_dispatch:
    inputs:
      concurrentUsers:
        description: 'Number of concurrent users to simulate'
        required: true
        default: '50'
      testDuration:
        description: 'Test duration in minutes'
        required: true
        default: '2'
      apiUrl:
        description: 'API URL to test (defaults to local service)'
        required: false
        default: 'http://localhost:8080/health'
  pull_request:
    types: [labeled]
  workflow_call:
    inputs:
      concurrentUsers:
        type: string
        required: false
        default: '50'
      testDuration:
        type: string
        required: false
        default: '2'
      apiUrl:
        type: string
        required: false
        default: 'http://localhost:8080/health'

jobs:
  performance-test-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp rich
        
    - name: Setup .NET 8.0 (for API service)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build and Start Docker Container for Testing
      run: |
        docker build -t webhookshell:test -f Dockerfile.linux .
        docker run -d --name test-webhookshell -p 8080:8080 webhookshell:test
        echo "Waiting for container to start..."
        sleep 30
        docker ps
        docker logs test-webhookshell
        curl -v http://localhost:8080/health || echo "Health check failed"
    
    - name: Copy load testing script
      run: |
        mkdir -p performance_tests
        chmod +rwx ./performance_tests
        mkdir -p performance_tests/reports
        chmod +rwx ./performance_tests/reports
        cp ./src/scripts/python/webhook_load_tester_linux.py ./performance_tests/
        chmod +rwx ./performance_tests/webhook_load_tester_linux.py

    - name: Debug directory structure
      run: ls -R
      
    - name: Run Performance Tests
      run: |
        cd performance_tests
        python webhook_load_tester_linux.py --api-url ${{ github.event.inputs.apiUrl || 'http://localhost:80/health' }} --concurrent-users ${{ github.event.inputs.concurrentUsers || '50' }} --duration ${{ github.event.inputs.testDuration || '2' }}
            
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      with:
        name: performance-test-reports-linux  # Differentiate from Windows
        path: performance_tests/reports/
        if-no-files-found: error

    - name: Create PR Comment with Test Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            const fs = require('fs');
            const summaryContent = fs.readFileSync('performance_tests/reports/load_test_results_*.json', 'utf8');
            github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summaryContent
            });
            
    - name: Display Test Summary for Linux Build
      run: |
        cat performance_tests/reports/load_test_results_*.json

    - name: Cleanup Docker Container
      if: always()
      run: |
        docker stop test-webhookshell || true
        docker rm test-webhookshell || true

  performance-test-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp rich
        
    - name: Setup .NET 8.0 (for API service)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build .NET Application
      run: |
        dotnet restore
        dotnet publish src/Webhookshell.csproj -c Release -o ./src/bin/Release/net8.0/publish

    - name: Build and Start Docker Container for Testing
      run: |
          docker build -t webhookshellwin:testwindows -f Dockerfile.windows .
          docker run -d --name test-webhookshell-windows -p 8080:8080 webhookshellwin:testwindows
          echo "Waiting for container to start..."
          Start-Sleep -Seconds 60
          docker ps
          docker logs test-webhookshell-windows
          echo "Testing health endpoint..."
          $response = try {(Invoke-WebRequest -Uri 'http://localhost:8080/health' -Method Get -UseBasicParsing).Content } catch { 'FAILED' }
          Write-Output "Health response: $response"
    
    - name: Copy load testing script 
      run: |
        mkdir performance_tests
        copy src\scripts\powershell\webhook_load_tester_windows.ps1 performance_tests\
        dir performance_tests

    - name: Run Performance Tests
      run: |
        mkdir performance_tests\reports
        cd performance_tests
        .\webhook_load_tester_windows.ps1 -ApiUrl 'http://localhost:8080/health' -ConcurrentUsers 50 -Duration 2
            
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      with:
        name: performance-test-reports-windows  # Differentiate from Linux
        path: performance_tests\reports
        if-no-files-found: warn
    
    - name: Display Test Summary for Windows Build
      continue-on-error: true
      run: |
        if (test-path performance_tests\reports\load_test_results_*.json){type performance_tests\reports\load_test_results_*.json}

    - name: Cleanup Docker Container
      if: always()
      run: |
        try { docker stop test-webhookshell-windows } catch { exit 0 }
        try { docker rm test-webhookshell-windows } catch { exit 0 }
