# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0-windowsservercore-ltsc2022 AS build
WORKDIR /app

# Copy the solution file and project files
COPY *.sln ./
COPY src/*.csproj ./src/
RUN dotnet restore

# Copy source code and publish
COPY src/ ./src/
RUN dotnet publish -c Release -o /out

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS runtime
WORKDIR /app

# Set shell to PowerShell for consistency
SHELL ["powershell", "-Command"]

# Install Chocolatey
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

# Install Python 3.10.11 using Chocolatey
RUN choco install python310 --version=3.10.11 -y; \
    $env:Path = [System.Environment]::GetEnvironmentVariable('Path', 'Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path', 'User')

# Upgrade pip and install Python packages
RUN python -m ensurepip --upgrade; \
    python -m pip install --upgrade pip; \
    pip install aiohttp rich

# Verify Python
RUN python --version || exit 1

# Install PowerShell Core 7.4.1 using Chocolatey
RUN choco install powershell-core --version=7.4.1 -y; \
    $env:Path = [System.Environment]::GetEnvironmentVariable('Path', 'Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path', 'User')

# Verify PowerShell Core
RUN pwsh.exe -command "$PSVersionTable" || exit 1

# Copy published output from build stage
COPY --from=build /out ./

EXPOSE 8080 8443
ENTRYPOINT ["dotnet", "Webhookshell.dll"]