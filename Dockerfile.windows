# Use an official Chocolatey image as a builder
FROM chocolatey/choco:latest-windows AS choco

# Build stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS build
WORKDIR /app

# Copy Chocolatey from the builder image
COPY --from=choco C:\ProgramData\chocolatey C:\ProgramData\chocolatey

# Update PATH for Chocolatey
ENV PATH="C:\ProgramData\chocolatey\bin;${PATH}"

# Verify Chocolatey installation
RUN choco -v

# Set shell to PowerShell for consistency
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Install Python 3.10.11 and dependencies using Chocolatey
RUN choco install python310 --version=3.10.11 -y; \
    python -m ensurepip --upgrade; \
    python -m pip install --upgrade pip; \
    pip install aiohttp rich; \
    python --version

# Install PowerShell Core 7.4.1 using Chocolatey
RUN choco install powershell-core --version=7.4.1 -y; \
    pwsh.exe -Command "$PSVersionTable"

# Update PATH to include Python and PowerShell Core
ENV PATH="C:\Python310;C:\Python310\Scripts;C:\Program Files\PowerShell\7;${PATH}"

# Copy .NET project files and restore dependencies
COPY ["src/Webhookshell.csproj", "./"]
RUN dotnet restore "Webhookshell.csproj"

# Copy the rest of the source code and publish
COPY src/ .
RUN dotnet publish "Webhookshell.csproj" -c Release -o /app/publish /p:UseAppHost=true

# Final runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS final
WORKDIR /app

# Copy only the published app from the build stage
COPY --from=build /app/publish .

EXPOSE 8080 8443
ENTRYPOINT ["dotnet", "Webhookshell.dll"]