# Use Windows Server Core 2022 with .NET 8.0 runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

# First use PowerShell 5.1
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Install PowerShell Core
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
    Invoke-WebRequest -Uri 'https://github.com/PowerShell/PowerShell/releases/download/v7.4.1/PowerShell-7.4.1-win-x64.msi' -OutFile PowerShell.msi; \
    Start-Process -FilePath msiexec.exe -ArgumentList '/i', 'PowerShell.msi', '/quiet', '/norestart' -Wait; \
    Remove-Item -Path PowerShell.msi; \
    Write-Host 'PowerShell Core installed successfully'

# After PowerShell Core is installed, we can switch to it
SHELL ["pwsh", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Build container image
FROM mcr.microsoft.com/dotnet/sdk:8.0-windowsservercore-ltsc2022 AS build
WORKDIR /src

# Copy csproj and restore dependencies
COPY ["src/Webhookshell.csproj", "src/"]
RUN dotnet restore "src/Webhookshell.csproj"

# Copy everything else and build
COPY . .
WORKDIR "/src"
RUN dotnet publish "src/Webhookshell.csproj" -c Release -o /app/publish /p:UseAppHost=true

# Final image
FROM base AS final
WORKDIR /app
COPY --from=build /app/publish .

# Create scripts directories
RUN mkdir -Force -Path scripts\powershell; \
    mkdir -Force -Path scripts\python

# Set environment variables
ENV ASPNETCORE_URLS=http://+:80

ENTRYPOINT ["dotnet", "Webhookshell.dll"]