# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0-windowsservercore-ltsc2022 AS build
WORKDIR /app

# Copy the solution file and project files
COPY *.sln ./
COPY src/*.csproj ./src/
RUN dotnet restore

# Copy source code and publish
COPY src/ ./src/
RUN dotnet publish -c Release -o /out

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0-windowsservercore-ltsc2022 AS runtime
WORKDIR /app

# Set shell to PowerShell for consistency
SHELL ["powershell", "-Command"]

# Install Python 3.10.11
RUN Invoke-WebRequest -Uri 'https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe' -OutFile 'python-installer.exe' -ErrorAction Stop; \
    Start-Process -FilePath 'python-installer.exe' -ArgumentList '/quiet InstallAllUsers=1 PrependPath=1' -Wait -NoNewWindow; \
    Remove-Item 'python-installer.exe' -Force; \
    $env:Path = [System.Environment]::GetEnvironmentVariable('Path', 'Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path', 'User')

RUN python -m ensurepip --upgrade; \
    python -m pip install --upgrade pip; \
    pip install aiohttp rich

# Verify Python
RUN python --version || exit 1

# Install PowerShell Core 7.4.1
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
    Invoke-WebRequest -Uri 'https://github.com/PowerShell/PowerShell/releases/download/v7.4.1/PowerShell-7.4.1-win-x64.msi' -OutFile 'PowerShell.msi' -ErrorAction Stop; \
    Start-Process -FilePath 'msiexec.exe' -ArgumentList '/i', 'PowerShell.msi', '/quiet', '/norestart' -Wait -NoNewWindow; \
    Remove-Item -Path 'PowerShell.msi' -Force; \
    $env:Path = [System.Environment]::GetEnvironmentVariable('Path', 'Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path', 'User')

# Verify PowerShell Core
RUN pwsh.exe -command "$PSVersionTable" || exit 1

# Copy published output from build stage
COPY --from=build /out ./

EXPOSE 8080 8443
ENTRYPOINT ["dotnet", "Webhookshell.dll"]